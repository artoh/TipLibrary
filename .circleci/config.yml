# Orb 'circleci/node@1.1.6' resolved to 'circleci/node@1.1.6'
version: 2.1
orbs:
  heroku: circleci/heroku@1.0.1
  browser-tools: circleci/browser-tools@0.1.4
jobs:
  build-and-test:
    docker:
      - image: circleci/node:latest

    environment:
      - CC_TEST_REPORTER_ID: f2fe609cbb5e4814f0ca6588ecb6cb3eedd5d9e2bb8fa985e88b15fe559ad25a

    steps:
      - checkout
      - restore_cache:
          keys:
            - node-deps-v1-{{ .Branch }}-{{ checksum "package.json" }}
            - node-deps-v1-{{ .Branch }}
            - node-deps-v1
      - run:
          name: Download cc-test-reporter
          command: |
            mkdir -p tmp/
            cd tmp
            curl -L  https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 -o cc-test-reporter
            chmod +x cc-test-reporter
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter
      - run:
          command: npm install
      - run:
          name: Run jest unit tests for backend
          command: |
            npm test
      #            ./tmp/cc-test-reporter format-coverage ./coverage/lcov.info -t lcov -o ./tmp/codeclimate.total.json
      #            ./tmp/cc-test-reporter upload-coverage -i ./tmp/codeclimate.total.json
      - run:
          name: Build and run jest unit tests for frontend
          command: |
            cd frontend
            npm install
            npm run build
            npm test
            ../tmp/cc-test-reporter format-coverage ./coverage/lcov.info -t lcov -o ../tmp/codeclimate.frontend.json
            ../tmp/cc-test-reporter upload-coverage -i ../tmp/codeclimate.frontend.json
            bash <(curl -s https://codecov.io/bash)

      - browser-tools/install-chrome

      - browser-tools/install-chromedriver

      - run:
          name: Run cucumber acceptance tests
          command: npm start & (sleep 15 && ./node_modules/.bin/cucumber-js) 

      - save_cache:
          key: node-deps-v1-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ~/project/node_modules

workflows:
  heroku_deploy:
    jobs:
      - build-and-test
      - heroku/deploy-via-git:
          requires:
            - build-and-test
          filters:
            branches:
              only: master
          app-name: "tip-library"

  version: 2
